package com.abc.apidemo.bootstrap;import com.abc.apidemo.entity.StudentAppUser;import com.abc.apidemo.repo.StudentAppUserRepository;import com.google.common.collect.Lists;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.boot.CommandLineRunner;import org.springframework.security.crypto.password.PasswordEncoder;import org.springframework.stereotype.Component;import javax.annotation.PostConstruct;import javax.annotation.PreDestroy;import static com.abc.apidemo.security.AppUserRole.*;@Slf4j@Component@RequiredArgsConstructorpublic class BootstrapUsers {	private final StudentAppUserRepository studentAppUserRepository;	private final PasswordEncoder passwordEncoder;	@PostConstruct	public void initializeDBWithAppUsers() {		log.info("@PostConstruct => Intializing DB: count = {}", studentAppUserRepository.count());		studentAppUserRepository.save(new StudentAppUser("abcham", passwordEncoder.encode("password"), "admin@email.net", "Alhagie Bai Cham", ADMIN, ADMIN.grantedAuthorities(), true, true, true, true));		studentAppUserRepository.save(new StudentAppUser("hcham", passwordEncoder.encode("password"), "admin@email.net", "Horeja Cham", ADMIN_TRAINEE, ADMIN_TRAINEE.grantedAuthorities(), true, true, true, true));		studentAppUserRepository.save(new StudentAppUser("asimaha", passwordEncoder.encode("password"), "cham1.abc@gmail.com@email.net", "Abubacarr Simaha", STUDENT, STUDENT.grantedAuthorities(), true, true, true, true));		log.info("@PostConstruct => Loaded DB: count = {}", studentAppUserRepository.count());	}	@PreDestroy	public void emptyDb(){		log.info("Emptying DB");		studentAppUserRepository.deleteAll();		log.info("@PreDestroy => Empty DB: count = {}", studentAppUserRepository.count());	}}